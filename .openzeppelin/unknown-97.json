{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x86211de0a0826EdAfaF8312475E787698A071ACc",
    "txHash": "0x9ea26b0d893a4295da008f42d726b4ecf9ed1859218c2ac52a435eb903e53b37"
  },
  "proxies": [
    {
      "address": "0xA43bAb5Fd8B34774FFb64D788C03D19831F99eEC",
      "txHash": "0x487f2b165b2a8b4fa02d219df3c0fbce8d87cbb3c55009c5f1288f975b6dc75e",
      "kind": "transparent"
    },
    {
      "address": "0x71098f5D954920b22f3Df473C042B97bD116e721",
      "txHash": "0xf8cae9b560a00120a8f14fa20a27b6a04b893b2e97481a60035e5763879665e1",
      "kind": "transparent"
    },
    {
      "address": "0xD16c4f6551e562D837e993f61a2A2788f0eC3d48",
      "txHash": "0x41a8b4f04f526149df375aed94684d7f3991a775edb9407afa6b7f157d63e531",
      "kind": "uups"
    }
  ],
  "impls": {
    "bd33fad97497afbd473263974be6995fb07f8a1e5889417fee3addc35769753e": {
      "address": "0x9da458DCc20a8e4B222d7fc2c3482dA195DF743D",
      "txHash": "0xeb725cbbc0f1190cd39342c2d2700848a82b34469f2b1cf00386ae950307078b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:35"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:37"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:39"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:40"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperatorsArray",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:46"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:49"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_operators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:52"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_revokedDefaultOperators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:53"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:56"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:561"
          },
          {
            "contract": "ERC777PresetFixedSupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\presets\\ERC777PresetFixedSupplyUpgradeable.sol:57"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:11"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_feePercent",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:12"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_eleemosynary",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:13"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_donationPercent",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d994c85c719d88c0c6819d141bfc6ae432c9616cfb2523a122d88ccf4c44567c": {
      "address": "0x749d4e5478Fd73b721525b3B352160068a6E77fF",
      "txHash": "0x8c162480c78403349fc4a93a1f678d3f6355c5bb6e64196e51ae9503338088ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_schnoodle",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:12"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_depositId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:13"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_accountDeposits",
            "type": "t_mapping(t_address,t_array(t_struct(Deposit)10496_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:14"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_accountUnbonds",
            "type": "t_mapping(t_address,t_array(t_struct(Unbond)10507_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:15"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:16"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_totalTokens",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:17"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_cumulativeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:18"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_checkpointBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:19"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_totalDepositWeight",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:20"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_sigmoidParams",
            "type": "t_struct(SigmoidParams)10512_storage",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(Deposit)10496_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV1.Deposit[])"
          },
          "t_array(t_struct(Deposit)10496_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV1.Deposit[]"
          },
          "t_struct(Deposit)10496_storage": {
            "label": "struct SchnoodleFarmingV1.Deposit",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "vestingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "unbondingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "multiplier",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Unbond)10507_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV1.Unbond[])"
          },
          "t_array(t_struct(Unbond)10507_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV1.Unbond[]"
          },
          "t_struct(Unbond)10507_storage": {
            "label": "struct SchnoodleFarmingV1.Unbond",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expiryBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(SigmoidParams)10512_storage": {
            "label": "struct SchnoodleFarmingV1.SigmoidParams",
            "members": [
              {
                "label": "k",
                "type": "t_uint256"
              },
              {
                "label": "a",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3eb3fb9a2468b559caa498363d8554f04ec4eeac03fe27e82fc81b495ec46fd6": {
      "address": "0x0948ECCA2f30E764f309663b2434eaE73A439e20",
      "txHash": "0x2074433a23927870e1f3033765496948514fdb5bb4951bab88df0a26b125fbd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_schnoodle",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:12"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_depositId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:13"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_accountDeposits",
            "type": "t_mapping(t_address,t_array(t_struct(Deposit)11791_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:14"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_accountUnbonds",
            "type": "t_mapping(t_address,t_array(t_struct(Unbond)11802_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:15"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:16"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_totalTokens",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:17"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_cumulativeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:18"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_checkpointBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:19"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_totalDepositWeight",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:20"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_sigmoidParams",
            "type": "t_struct(SigmoidParams)11807_storage",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:23"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_vestingBlocksFactor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:25"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_unbondingBlocksFactor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:26"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_maxUnbondingBlocks",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(Deposit)11791_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV2.Deposit[])"
          },
          "t_array(t_struct(Deposit)11791_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV2.Deposit[]"
          },
          "t_struct(Deposit)11791_storage": {
            "label": "struct SchnoodleFarmingV2.Deposit",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "vestingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "unbondingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "multiplier",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Unbond)11802_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV2.Unbond[])"
          },
          "t_array(t_struct(Unbond)11802_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV2.Unbond[]"
          },
          "t_struct(Unbond)11802_storage": {
            "label": "struct SchnoodleFarmingV2.Unbond",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expiryBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(SigmoidParams)11807_storage": {
            "label": "struct SchnoodleFarmingV2.SigmoidParams",
            "members": [
              {
                "label": "k",
                "type": "t_uint256"
              },
              {
                "label": "a",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1fd77244587506a34b29954d5581d4719ecd0717a923e00634a30cba00385329": {
      "address": "0x9bD9913D0d22B1a94e52f6907FAAcA20f2ee65B1",
      "txHash": "0xc30b3c31af8619be3bd10d245e61914c6786e73d84a4f68b162c0a434e823565",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:35"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:37"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:39"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:40"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperatorsArray",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:46"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:49"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_operators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:52"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_revokedDefaultOperators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:53"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:56"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:561"
          },
          {
            "contract": "ERC777PresetFixedSupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\presets\\ERC777PresetFixedSupplyUpgradeable.sol:57"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:12"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_feeRate",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:13"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_eleemosynaryAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:14"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_donationRate",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:15"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_sellThreshold",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:16"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_sellQuota",
            "type": "t_struct(TokenMeter)19746_storage",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:17"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_rateEscalator",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:18"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_schnoodleFarming",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:11"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_farmingFund",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:12"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_sowRate",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:13"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_avoidReentrancy",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:20"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_bridgeOwner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:21"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_tokensSent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:22"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_tokensReceived",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:23"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_feesPaid",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(TokenMeter)19746_storage": {
            "label": "struct SchnoodleV9Base.TokenMeter",
            "members": [
              {
                "label": "blockMetric",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "54ee192c11643f8191cdcf713a2ff4f6e5a7a9fd2f9473a6ea9d4ad71dcc63fc": {
      "address": "0xdA209B2D0BCBFBD86ade6eFfC41b817E7d9F1882",
      "txHash": "0x35028f7042c03535269e1e3cad481f86f6cb08145b438507a5abd18d2167a199",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "SchnoodleNFTBase",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)4610_storage",
            "src": "..\\project:\\contracts\\imports\\SchnoodleNFTBase.sol:25"
          },
          {
            "contract": "SchnoodleNFTBase",
            "label": "_baseUri",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\imports\\SchnoodleNFTBase.sol:26"
          },
          {
            "contract": "SchnoodleNFTBase",
            "label": "_proxyRegistryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\imports\\SchnoodleNFTBase.sol:27"
          }
        ],
        "types": {
          "t_struct(Counter)4610_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
