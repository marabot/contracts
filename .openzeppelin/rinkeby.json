{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x417490A1407b197a2020f787dA09c8df5380ec7B",
    "txHash": "0x7b9c6754a24764c02076ecf39dc9029a45cce02b59f1ba12f9f8b1948dd97791"
  },
  "proxies": [
    {
      "address": "0x4f2c302FD3874aa9e6B898d10DAA84ba216B50B4",
      "txHash": "0x8ab3581de0db82cb500f894c53aa7fdc1f0fd61b9a83b9caf7994495d0d7f14d",
      "kind": "transparent"
    },
    {
      "address": "0x9C4b12fFB2Fd3A66c028085FBc9777348397ADe1",
      "txHash": "0xc1048e384586748ea388027f3dbba68b48b35baf3e2eceef81cf00598d2b5143",
      "kind": "transparent"
    },
    {
      "address": "0xF3dB68145EC192dFc31b9627707517Da71650A2c",
      "txHash": "0x022edb409725907b7ee5cb046981183d597b940a372d52aa9323c65d98824186",
      "kind": "uups"
    }
  ],
  "impls": {
    "bd33fad97497afbd473263974be6995fb07f8a1e5889417fee3addc35769753e": {
      "address": "0x535e24533A8c0f848F2B5CDa5130004d7F1d3898",
      "txHash": "0xd51f20482455180c13402fadd4809344ce8c3838daa70c2531a9ed18d1eaed2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:35"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:37"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:39"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:40"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperatorsArray",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:46"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:49"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_operators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:52"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_revokedDefaultOperators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:53"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:56"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:561"
          },
          {
            "contract": "ERC777PresetFixedSupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\presets\\ERC777PresetFixedSupplyUpgradeable.sol:57"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:11"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_feePercent",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:12"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_eleemosynary",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:13"
          },
          {
            "contract": "SchnoodleV1",
            "label": "_donationPercent",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV1.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d994c85c719d88c0c6819d141bfc6ae432c9616cfb2523a122d88ccf4c44567c": {
      "address": "0x44Be4bDdc50E8097fCd21a57C0754ccFF9dc4E2F",
      "txHash": "0xd3b996ab9ce2e8e61066c4ef06c3966385dea5c5c712133a9c203d03bec954ff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_schnoodle",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:12"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_depositId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:13"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_accountDeposits",
            "type": "t_mapping(t_address,t_array(t_struct(Deposit)10496_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:14"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_accountUnbonds",
            "type": "t_mapping(t_address,t_array(t_struct(Unbond)10507_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:15"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:16"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_totalTokens",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:17"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_cumulativeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:18"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_checkpointBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:19"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_totalDepositWeight",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:20"
          },
          {
            "contract": "SchnoodleFarmingV1",
            "label": "_sigmoidParams",
            "type": "t_struct(SigmoidParams)10512_storage",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV1.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(Deposit)10496_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV1.Deposit[])"
          },
          "t_array(t_struct(Deposit)10496_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV1.Deposit[]"
          },
          "t_struct(Deposit)10496_storage": {
            "label": "struct SchnoodleFarmingV1.Deposit",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "vestingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "unbondingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "multiplier",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Unbond)10507_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV1.Unbond[])"
          },
          "t_array(t_struct(Unbond)10507_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV1.Unbond[]"
          },
          "t_struct(Unbond)10507_storage": {
            "label": "struct SchnoodleFarmingV1.Unbond",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expiryBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(SigmoidParams)10512_storage": {
            "label": "struct SchnoodleFarmingV1.SigmoidParams",
            "members": [
              {
                "label": "k",
                "type": "t_uint256"
              },
              {
                "label": "a",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3eb3fb9a2468b559caa498363d8554f04ec4eeac03fe27e82fc81b495ec46fd6": {
      "address": "0xC14202F718398aD81D3b292749B9D942B703e093",
      "txHash": "0xb5584a154775e5a2294bbfed503bf2455a8ed120bf578e5981cfa1b3548bde15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_schnoodle",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:12"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_depositId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:13"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_accountDeposits",
            "type": "t_mapping(t_address,t_array(t_struct(Deposit)11791_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:14"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_accountUnbonds",
            "type": "t_mapping(t_address,t_array(t_struct(Unbond)11802_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:15"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:16"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_totalTokens",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:17"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_cumulativeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:18"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_checkpointBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:19"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_totalDepositWeight",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:20"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_sigmoidParams",
            "type": "t_struct(SigmoidParams)11807_storage",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:23"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_vestingBlocksFactor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:25"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_unbondingBlocksFactor",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:26"
          },
          {
            "contract": "SchnoodleFarmingV2",
            "label": "_maxUnbondingBlocks",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleFarmingV2.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_struct(Deposit)11791_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV2.Deposit[])"
          },
          "t_array(t_struct(Deposit)11791_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV2.Deposit[]"
          },
          "t_struct(Deposit)11791_storage": {
            "label": "struct SchnoodleFarmingV2.Deposit",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              },
              {
                "label": "vestingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "unbondingBlocks",
                "type": "t_uint256"
              },
              {
                "label": "multiplier",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_array(t_struct(Unbond)11802_storage)dyn_storage)": {
            "label": "mapping(address => struct SchnoodleFarmingV2.Unbond[])"
          },
          "t_array(t_struct(Unbond)11802_storage)dyn_storage": {
            "label": "struct SchnoodleFarmingV2.Unbond[]"
          },
          "t_struct(Unbond)11802_storage": {
            "label": "struct SchnoodleFarmingV2.Unbond",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "expiryBlock",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_struct(SigmoidParams)11807_storage": {
            "label": "struct SchnoodleFarmingV2.SigmoidParams",
            "members": [
              {
                "label": "k",
                "type": "t_uint256"
              },
              {
                "label": "a",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c7c5461e69ebb588bfe383d325cddd04ebf03f157d3d282ade3bec71b346befc": {
      "address": "0x4818AdC1C8d7dbf21A98EAD708a86aCDE246E6C2",
      "txHash": "0xbe8c5992855e002160d65513203a1b31f204a3c950d13e281da2e8ffe3fb143a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:35"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:37"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:39"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:40"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperatorsArray",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:46"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_defaultOperators",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:49"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_operators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:52"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_revokedDefaultOperators",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:53"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:56"
          },
          {
            "contract": "ERC777Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\ERC777Upgradeable.sol:561"
          },
          {
            "contract": "ERC777PresetFixedSupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC777\\presets\\ERC777PresetFixedSupplyUpgradeable.sol:57"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:12"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_feeRate",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:13"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_eleemosynaryAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:14"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_donationRate",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:15"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_sellThreshold",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:16"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_sellQuota",
            "type": "t_struct(TokenMeter)19712_storage",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:17"
          },
          {
            "contract": "SchnoodleV9Base",
            "label": "_rateEscalator",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\imports\\SchnoodleV9Base.sol:18"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_schnoodleFarming",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:11"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_farmingFund",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:12"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_sowRate",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:13"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_avoidReentrancy",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:20"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_tokensSent",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:21"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_tokensReceived",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:22"
          },
          {
            "contract": "SchnoodleV9",
            "label": "_feesPaid",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\SchnoodleV9.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_struct(TokenMeter)19712_storage": {
            "label": "struct SchnoodleV9Base.TokenMeter",
            "members": [
              {
                "label": "blockMetric",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_int256"
              }
            ]
          },
          "t_int256": {
            "label": "int256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "54ee192c11643f8191cdcf713a2ff4f6e5a7a9fd2f9473a6ea9d4ad71dcc63fc": {
      "address": "0xcE7BBecD14412e06dcB8e8B6c601347ea3e9F8d7",
      "txHash": "0x17a57cc721ede06c5b02a91e7d258cb82f22b6c6b555518070a3e78351cd448c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:21"
          },
          {
            "contract": "ERC721URIStorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721URIStorageUpgradeable.sol:79"
          },
          {
            "contract": "ERC721BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721BurnableUpgradeable.sol:38"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "contract": "SchnoodleNFTBase",
            "label": "_tokenIdCounter",
            "type": "t_struct(Counter)4610_storage",
            "src": "..\\project:\\contracts\\imports\\SchnoodleNFTBase.sol:25"
          },
          {
            "contract": "SchnoodleNFTBase",
            "label": "_baseUri",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\imports\\SchnoodleNFTBase.sol:26"
          },
          {
            "contract": "SchnoodleNFTBase",
            "label": "_proxyRegistryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\imports\\SchnoodleNFTBase.sol:27"
          }
        ],
        "types": {
          "t_struct(Counter)4610_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
